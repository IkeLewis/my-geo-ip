-- my-geo-ip -- The my-geo-ip package provides geo-ip services to
--               applications via a MySQL database.
--
-- Copyright (C) 2016-2019 Isaac Lewis

-- Setup the database

DROP DATABASE IF EXISTS geo_ip;
CREATE DATABASE geo_ip CHARACTER SET utf8;

USE geo_ip;

-- Load the required SQL libraries

source $mysql_geo_ip_load_dir/lib-admin.sql;

-- Copy shell variables to SQL-user variables

SET @geo_ip_home='$geo_ip_home',
    @geo_ip_pass='$mysql_geo_ip_pass',
    @geo_ip_updater_pass='$mysql_geo_ip_updater_pass';

-- Create the country locations table (a small table optimized for
-- geoname_id searches)

DROP TABLE IF EXISTS geo_ip.country_locations;
CREATE TABLE geo_ip.country_locations (date DATE, geoname_id
VARCHAR(7), locale_code VARCHAR(2), continent_code VARCHAR(2),
continent_name VARCHAR(13), country_iso_code VARCHAR(2), country_name
VARCHAR(44), is_in_european_union VARCHAR(1), PRIMARY KEY ( geoname_id ));

-- Create the country blocks table (a large table optimized for fast
-- IP searches)

DROP TABLE IF EXISTS country_blocks_ipv4;
CREATE TABLE country_blocks_ipv4 (date DATE, min_ip INT UNSIGNED,
max_ip INT UNSIGNED, geoname_id VARCHAR(7),
registered_country_geoname_id VARCHAR(7),
represented_country_geoname_id VARCHAR(7), is_anonymous_proxy
VARCHAR(1), is_satellite_provider VARCHAR(1), PRIMARY KEY ( min_ip ));

-- PUBLIC API (see the README for examples)

DROP PROCEDURE IF EXISTS geo_ip.info;
delimiter //
CREATE PROCEDURE geo_ip.info(ip CHAR(15))
BEGIN
SELECT * FROM country_blocks_ipv4 NATURAL JOIN country_locations WHERE
min_ip<=INET_ATON(ip) AND INET_ATON(ip)<=max_ip ORDER BY date DESC
LIMIT 1;
END//
delimiter ;